const mysqlcon = require("../../../config/db_connection");

module.exports.reports = async function (req, res) {
  try {
   
    let sql ="SELECT invoice_id as Sr , order_no as 'Order No' ,transaction_id as 'Transaction id',card_4_4 as 'Card No' ,ammount as Amount,payin_charges as 'Payin_charges',gst_charges as GST ,ammount_type as Currency,payment_type as Method,i_country as Country,created_on,updated_on FROM tbl_merchant_transaction";
    const result = await mysqlcon(sql);
    const calculateDeposite = [
      {
        Sr: null,
        "Order No": null,
        "Transaction id": null,
        "Card No": null,
        Amount: null,
        Payin_charges: null,
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: null,
        "Order No": null,
        "Transaction id": "Deposit Summary",
        "Card No": null,
        Amount: null,
        Payin_charges: null,
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: null,
        "Order No": null,
        "Transaction id": null,
        "Card No": null,
        Amount: null,
        Payin_charges: null,
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "Currency",
        "Order No": "Total Transaction",
        "Transaction id": "Total Amount",
        "Card No": "Commission",
        Amount: "Refund Amount",
        Payin_charges: "Total ChargeBack",
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "VND",
        "Order No": result.filter((item) => item.Currency === "VND").length,
        "Transaction id":result .reduce((total,current)=> {return total+=Number(current.Amount)},0),
        "Card No": result.filter((item) => item.Currency === "VND").reduce((total,current)=> {return total+=Number(current.GST)+Number(current.Payin_charges)},0),
        Amount: "0",
        Payin_charges: "0",
        GST: null,
        Currency: null,     
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "THB",
        "Order No": result.filter((item) => item.Currency === "THB").length,
        "Transaction id": result.filter((item) => item.Currency === "TBH").reduce((total,current)=> {return total+=Number(current.Amount)},0),
        "Card No": result.filter((item) => item.Currency === "TBH").reduce((total,current)=> {return total+=Number(current.GST)+Number(current.Payin_charges)},0),
        Amount: "0",
        Payin_charges: "0",
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "IDR",
        "Order No": result.filter((item) => item.Currency === "IDR").length,
        "Transaction id": result.filter((item) => item.Currency === "IDR").reduce((total,current)=> {return total+=Number(current.Amount)},0),
        "Card No": result.filter((item) => item.Currency === "IDR").reduce((total,current)=> {return total+=Number(current.GST)+Number(current.Payin_charges)},0),
        Amount: "0",
        Payin_charges: "1",
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "PHP",
        "Order No": result.filter((item) => item.Currency === "PHP").length,
        "Transaction id": result.filter((item) => item.Currency === "PHP").reduce((total,current)=> {return total+=Number(current.Amount)},0),
        "Card No": result.filter((item) => item.Currency === "PHP").reduce((total,current)=> {return total+=Number(current.GST)+Number(current.Payin_charges)},0),
        Amount: "0",
        Payin_charges: "0",
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "INR",
        "Order No": result.filter((item) => item.Currency === "INR").length,
        "Transaction id": result.filter((item) => item.Currency === "INR").reduce((total,current)=> {return total+=Number(current.Amount)},0),
        "Card No": result.filter((item) => item.Currency === "INR").reduce((total,current)=> {return total+=Number(current.GST)+Number(current.Payin_charges)},0),
        Amount: "0",
        Payin_charges: "0",
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
      {
        Sr: "CNY",
        "Order No": result.filter((item) => item.Currency === "CNY").length,
        "Transaction id": result.filter((item) => item.Currency === "CNY").reduce((total,current)=> {return total+=Number(current.Amount)},0),
        "Card No": result.filter(() => item.Currency === "CNY").reduce((total,current)=> {return total+=Number(current.GST)+Number(current.Payin_charges)},0),
        Amount: "0",
        Payin_charges: "1",
        GST: null,
        Currency: null,
        Method: null,
        Country: null,
        created_on: null,
        updated_on: null,
      },
    ];
    const deposit = [...result, ...calculateDeposite];
    res.status(200).json({
      deposit,
    });
  } catch (error) {
    res.status(500).json({
      message: "Somthing went wrong in reports",
    });
  }
};
